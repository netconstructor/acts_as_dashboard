= acts_as_dashboard

== Description

acts_as_dashboard makes it dead easy to create dashboards in Rails apps.

== Usage

Create a controller to use as a dashboard. Eg:

  class DashboardsController < ApplicationController
    acts_as_dashboard
  end

Add some "number" widgets to the dashboard. Eg:

  class DashboardsController < ApplicationController
    acts_as_dashboard

    dashboard_number do |d|
      d.name            = :this_minutes_seconds
      d.title           = 'Seconds in this minute'
      d.update_interval = '5s'
      d.data            {Time.now.sec}
    end

    dashboard_number do |d|
      d.name            = :load_average
      d.title           = 'Load average'
      d.update_interval = '5s'

      d.data do
        uptime = `uptime`.strip

        load_average = uptime.match(/load average: ([^,]+)/).captures.first

        load_average
      end
    end

Create some routes in config/routes.rb . Eg:

  ActionController::Routing::Routes.draw do |map|
    map.resource  :dashboard, :only => :show
    map.connect   "dashboard/widgets/*path", :controller => :dashboards, :action => 'widget_data'
  end

Fire up your web server. Eg:
  $ script/server

Browse on over to http://localhost:3000/dashboard

== To Do

* Figure out how to configure a Rails app's Rakefile to use this gem's Rake tasks.
* Fill in the "dashboard:install_javascript" Rake task.
* Fill in the "dashboard:install_stylesheets" Rake task.
* Fill in the "dashboard:install" Rake task.
* Figure out how to create routes at run-time. (See lib/acts_as_dashboard/class_methods.rb)
* Find a better way of embedding AAD's CSS and JavaScript files into the "show" view template. I don't like reading the files manually and passing their contents to the view template. That feels dirty.
* Make the "show" view template sexy.
* Add more widget types.

== Bugs

* At the moment, if there's a single-quote (') in a widget's name, the JSON that is used to build the dashboard is invalid. This breaks all of the JavaScript functionality in the dashboard. This needs to be fixed in AAD::InstanceMethods#show .

== Note On Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add RSpec specs for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Nick Hoffman. See LICENSE for details.
